From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Thu, 15 Jul 2021 01:41:53 -0700
Subject: [PATCH] Add more async catchers


diff --git a/src/main/java/net/minecraft/world/level/entity/EntityTickList.java b/src/main/java/net/minecraft/world/level/entity/EntityTickList.java
index f01182a0ac8a14bcd5b1deb778306e7bf1bf70ed..39252d4d0b1228097d086fca2c650293b14bb275 100644
--- a/src/main/java/net/minecraft/world/level/entity/EntityTickList.java
+++ b/src/main/java/net/minecraft/world/level/entity/EntityTickList.java
@@ -30,11 +30,13 @@ public class EntityTickList {
     }
 
     public void add(Entity entity) {
+        com.tuinity.tuinity.util.TickThread.ensureTickThread("Asynchronous entity ticklist addition"); // Tuinity
         this.ensureActiveIsNotIterated();
         this.active.put(entity.getId(), entity);
     }
 
     public void remove(Entity entity) {
+        com.tuinity.tuinity.util.TickThread.ensureTickThread("Asynchronous entity ticklist removal"); // Tuinity
         this.ensureActiveIsNotIterated();
         this.active.remove(entity.getId());
     }
@@ -44,6 +46,7 @@ public class EntityTickList {
     }
 
     public void forEach(Consumer<Entity> action) {
+        com.tuinity.tuinity.util.TickThread.ensureTickThread("Asynchronous entity ticklist iteration"); // Tuinity
         if (this.iterated != null) {
             throw new UnsupportedOperationException("Only one concurrent iteration supported");
         } else {
diff --git a/src/main/java/net/minecraft/world/level/entity/PersistentEntitySectionManager.java b/src/main/java/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
index d1428fe87ec3be070d9a125a1774ea758d4cd74b..762de869a6e6c1fbb1e1a969ad7dab2e1ef32ec5 100644
--- a/src/main/java/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
+++ b/src/main/java/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
@@ -146,6 +146,7 @@ public class PersistentEntitySectionManager<T extends EntityAccess> implements A
     }
 
     public void updateChunkStatus(ChunkPos chunkPos, ChunkHolder.FullChunkStatus levelType) {
+        com.tuinity.tuinity.util.TickThread.ensureTickThread("Asynchronous chunk ticking status update"); // Tuinity
         Visibility visibility = Visibility.fromFullChunkStatus(levelType);
         this.updateChunkStatus(chunkPos, visibility);
     }
