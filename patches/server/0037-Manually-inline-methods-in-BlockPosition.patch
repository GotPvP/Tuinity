From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <spottedleaf@spottedleaf.dev>
Date: Mon, 6 Jul 2020 22:48:48 -0700
Subject: [PATCH] Manually inline methods in BlockPosition


diff --git a/src/main/java/net/minecraft/core/BlockPos.java b/src/main/java/net/minecraft/core/BlockPos.java
index b70aa66732fb5e957aed0901f4c76358b2c56f8e..b01d7da333bac7820e42b6f645634a15ef88ae4f 100644
--- a/src/main/java/net/minecraft/core/BlockPos.java
+++ b/src/main/java/net/minecraft/core/BlockPos.java
@@ -478,9 +478,9 @@ public class BlockPos extends Vec3i {
         }
 
         public BlockPos.MutableBlockPos set(int x, int y, int z) {
-            this.setX(x);
-            this.setY(y);
-            this.setZ(z);
+            this.x = x; // Tuinity - force inline
+            this.y = y; // Tuinity - force inline
+            this.z = z; // Tuinity - force inline
             return this;
         }
 
@@ -544,19 +544,19 @@ public class BlockPos extends Vec3i {
         // Paper start - comment out useless overrides @Override - TODO figure out why this is suddenly important to keep
         @Override
         public BlockPos.MutableBlockPos setX(int i) {
-            super.setX(i);
+            this.x = i; // Tuinity
             return this;
         }
 
         @Override
         public BlockPos.MutableBlockPos setY(int i) {
-            super.setY(i);
+            this.y = i; // Tuinity
             return this;
         }
 
         @Override
         public BlockPos.MutableBlockPos setZ(int i) {
-            super.setZ(i);
+            this.z = i; // Tuinity
             return this;
         }
         // Paper end
diff --git a/src/main/java/net/minecraft/core/Vec3i.java b/src/main/java/net/minecraft/core/Vec3i.java
index 5e09890ba2fe326503a49b2dbec09845f5c8c5eb..3ad3652f8074de10222fb01c50548b4312103cc3 100644
--- a/src/main/java/net/minecraft/core/Vec3i.java
+++ b/src/main/java/net/minecraft/core/Vec3i.java
@@ -17,9 +17,9 @@ public class Vec3i implements Comparable<Vec3i> {
         return IntStream.of(vec3i.getX(), vec3i.getY(), vec3i.getZ());
     });
     public static final Vec3i ZERO = new Vec3i(0, 0, 0);
-    private int x;
-    private int y;
-    private int z;
+    protected int x; // Tuinity - protected
+    protected int y; // Tuinity - protected
+    protected int z; // Tuinity - protected
 
     // Paper start
     public boolean isValidLocation(net.minecraft.world.level.LevelHeightAccessor levelHeightAccessor) {
@@ -84,17 +84,17 @@ public class Vec3i implements Comparable<Vec3i> {
         return this.z;
     }
 
-    public Vec3i setX(int x) {
+    protected Vec3i setX(int x) { // Tuinity - not needed here - Also revert the decision to expose set on an _immutable_ type
         this.x = x;
         return this;
     }
 
-    public Vec3i setY(int y) {
+    protected Vec3i setY(int y) { // Tuinity - not needed here - Also revert the decision to expose set on an _immutable_ type
         this.y = y;
         return this;
     }
 
-    public Vec3i setZ(int z) {
+    protected Vec3i setZ(int z) { // Tuinity - not needed here - Also revert the decision to expose set on an _immutable_ type
         this.z = z;
         return this;
     }
